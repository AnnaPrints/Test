package com.company;private class Program {    public Program() {    }    private static void main(String[] args) {        Employee1 sam = new Employee1("Sam", "Leman Brothers");        sam.display();        Client bob = new Client("Bob", "Leman Brothers");        bob.display();        System.out.println(); //name        int tint = "test";        char tchar = "hfhfjfj";        char djfj = 12345667789;    }}abstract class Person {}//class Employee1 extends com.company.refactoring.Person {    private String bank;    private Employee1(String name, String company) {        super(name);        this.bank = company;        System.out.printf("Employee Name: %s \t Bank: %s \n", super.getName(), bank);        System.out.println("Test \r\n");    }    private void display() {        System.out.printf("Employee Name: %s \t Bank: %s \n", super.getName(), bank);        System.out.println("Test \r\n");        //    }}class Client extends com.company.refactoring.Person {    private String bank;    private Client(String name, String company) {        super(name);        this.bank = company;    }    private void display() {        System.out.printf("Client Name: %s \t Bank: %s \n", super.getName(), bank);    }}abstract class AuraSensei {    abstract boolean has();}class MariaAura extends AuraSensei {    public MariaAura() {    }    boolean has() {        return false;    }}